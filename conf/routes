# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~


### NoDocs ###
GET     /                           		 @controllers.Default.redirect(to = "/docs/swagger-ui/index.html?url=/docs/swagger.json")

### NoDocs ###
# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)

-> /egress-manager 	egress.Routes
-> /docs 			swagger.Routes

###
#  summary: Login registered user 
#  description: Creates a new session for a registered user and retrives user information
#  tags: 
#   - user
#  parameters:
#    - name: body
#      in: body
#      description: login request
#      required: true,
#      schema:
#        $ref: '#/definitions/model.LoginRequest'
#  responses:
#    200:
#      description: User info
#      headers:
#        -Session:
#         description: session information
#         type: string
#      schema:
#        $ref: '#/definitions/model.Responsable'
###
POST     /login           controllers.UserController.login()

###
#  summary: Retrieve student info 
#  description: Retrieve student basic info only if authenticated user has access to it 
#  tags: 
#   - user
#  parameters:
#    - name: Session
#      in: header
#      description: Session information of logged user
#      required: true,
#      type: string
#    - name: id alumno
#      in: path
#      description: Id of student
#      required: true,
#      type: int
#  responses:
#    200:
#      description: Person basic info
#      schema:
#        $ref: '#/definitions/model.Alumno'
###
GET     /students/:id           controllers.UserController.getStudent(id: model.Id)

###
#  summary: Retrieve responsable info 
#  description: Retrieve responsable basic info only if authenticated user has access to it 
#  tags: 
#   - user
#  parameters:
#    - name: Session
#      in: header
#      description: Session information of logged user
#      required: true,
#      type: string
#    - name: id responsable
#      in: path
#      description: Id of responsable
#      required: true,
#      type: int
#  responses:
#    200:
#      description: Person basic info
#      schema:
#        $ref: '#/definitions/model.Responsable'
###
GET     /responsables/:id           controllers.UserController.getResponsable(id: model.Id)
